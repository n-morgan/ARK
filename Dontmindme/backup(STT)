import speech_recognition as sr 
from TTS import TTS


class STT: 

    def __init__(self):
        self.r = sr.Recognizer()    # Set up the recognizer and microphone
        self.mic = sr.Microphone()
        # self.wakeup_word = "ark"   # Define the wakeup word

    def recognize_speech(self, a):
        x = a
        while(x):
            with self.mic as source:
                self.r.adjust_for_ambient_noise(source)
                print("Scanning Voice")
                audio = self.r.listen(source)
                text = ""
                try: 
                        # Adjust the ambient noise threshold dynamically
                        
                
                        # Listen for speech and convert it to text
                        
                        text = self.r.recognize_google(audio)
                        print(text)
                except sr.UnknownValueError:
                        TTS.tts("Could not understand audio")
                        continue
            return text.lower()
            
        
    # def check_wakeup_call(self, wakeup_word):
    #     while True:
    #         print("Listening for wakeup word...")
    #         text = self.recognize_speech()
    #         if text.startswith(wakeup_word.lower()):
    #             TTS.tts("Wakeup word detected!, Initializing Ark")
    #             return
    
    # def check_wakeup_call(self, wakeup_word):
    #     x = True
    #     while (x==True):
    #         TTS.tts("Listening for wakeup word...")
    #         print("Listening for wakeup word...")
    #         try:
    #             text = self.recognize_speech()
    #             if text.startswith(wakeup_word.lower()):
    #                 TTS.tts("Wakeup word detected!, Initializing Ark")
    #                 x=False
    #                 self.get_event_info()
    #                 break
    #         except sr.UnknownValueError:
    #             TTS.tts("Could not understand audio")
    #             continue
            
    # def check_wakeup_call(self, wakeup_word):
    #     x = True
    #     while (x):
    #         TTS.tts("Listening for wakeup word...")
    #         print("Listening for wakeup word...")
    #         text = self.recognize_speech(True)
    #         if text.count(wakeup_word) > 0:
    #             text = self.recognize_speech(False)
    #             TTS.tts("Wakeup word detected!, Initializing Ark")
    #             x = False
    #             self.commands()

    #             # self.recognize_speech(False)
    
    # def commands(self):
    #     TTS.tts("Hello. I am Ark. What can I do for you today")
    #     text = self.recognize_speech(True)

    #     if "how are you" in text: 
    #         TTS.tts("I am fine, how are you")
    #     elif "event adder"in text: 
    #         TTS.tts("Launching event adder")
    #         self.get_event_info(self)
    #     # elif "time" in text:  

             



                       
          
          

            
    # def get_event_info(self):
    #     TTS.tts("What's the name of the event?")
    #     event_name = self.recognize_speech(True)
    #     print("When is the event?")
    #     event_date = self.recognize_speech(True)
    #     print("What time does the event start?")
    #     event_start_time = self.recognize_speech(True)
    #     print("What time does the event end?")
    #     event_end_time = self.recognize_speech(True)
    #     print("Where is the event?")
    #     event_location = self.recognize_speech(True)
    #     print("Any additional information about the event?")
    #     event_description = self.recognize_speech(True)


# test = STT()
# test.check_wakeup_call(test.wakeup_word)



